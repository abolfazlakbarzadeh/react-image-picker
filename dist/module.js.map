{"mappings":"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","sources":["src/index.ts","src/image-picker/index.ts","src/image-picker/image-picker.tsx","src/image-picker/components/drag-drop/drag-drop.tsx","src/image-picker/components/file-selector/index.ts","src/image-picker/components/file-selector/file-selector.tsx","src/image-picker/components/preview/index.ts","src/image-picker/components/preview/preview.tsx","src/icons/carbon-close-outline.tsx","src/utils.ts","src/image-picker/upload.ts"],"sourcesContent":["export { default as ImagePicker } from \"./image-picker\";\n","export { default } from \"./image-picker\";\n","import \"../styles/global.scss\";\nimport React, { FC, useCallback, useMemo, useRef, useState } from \"react\";\nimport { DragDrop } from \"./components/drag-drop/drag-drop\";\nimport { Preview } from \"./components/preview\";\nimport { OnRemoveProps } from \"./components/preview/types\";\nimport { getFileID } from \"../utils\";\nimport { Uploader, cancelUpload } from \"./upload\";\nimport { AxiosRequestConfig } from \"axios\";\n\nconst ImagePicker: IImagePicker = (props) => {\n  const [uploadingFiles, setUploadingFiles] = useState<Record<string, number>>(\n    {}\n  );\n  const [uploadedFiles, setUploadedFiles] = useState<File[]>([]);\n\n  const isLimitReached =\n    ((!!props.files.length || !!props.images?.length) &&\n      !props.multiple &&\n      typeof props.limit == \"undefined\") ||\n    (typeof props.limit == \"number\" &&\n      (props.files.length >= props.limit ||\n        (props.images?.length || 0) >= props.limit));\n\n  const isUploading = useCallback(\n    (fileID: string) => {\n      const progress = uploadingFiles[fileID];\n      if (!progress) return false;\n      return progress < 100 && progress > -1;\n    },\n    [uploadingFiles]\n  );\n  const isUploaded = useCallback(\n    (fileID: string) =>\n      uploadedFiles.findIndex((file) => getFileID(file) == fileID) != -1,\n    [uploadedFiles]\n  );\n  const isFailUpload = useCallback(\n    (fileID: string) => {\n      const progress = uploadingFiles[fileID];\n      if (!progress) return false;\n      return progress == -1;\n    },\n    [uploadingFiles]\n  );\n  const uploader = Uploader({\n    isUploading,\n    setUploadedFiles,\n    setUploadingFiles,\n    uploadAction: props.uploadAction,\n    uploadHandler: props.uploadHandler,\n    uploadOnSelect: props.uploadOnSelect,\n    uploadAxiosOptions: props.uploadAxiosOptions,\n  });\n  const handleDropFiles = (files: File[]) => {\n    props.onFilesChange((selected) => [...selected, ...files]);\n    uploader.upload(Array.from(files));\n  };\n  const handleRemove = (image: OnRemoveProps) => {\n    if (image.isFile) {\n      props.onFilesChange((files) => [\n        ...files.filter((file) => getFileID(file) != getFileID(image.file!)),\n      ]);\n      cancelUpload(getFileID(image.file!));\n    } else {\n      props.onRemoveImage?.(image.image!);\n    }\n  };\n  const previewSection = useMemo(() => {\n    const fileItems = Array.from(props.files).map((file, idx) => (\n      <Preview\n        key={getFileID(file)}\n        // large={!props.multiple}\n        file={file}\n        uploaded={isUploaded(getFileID(file))}\n        isUploading={isUploading(getFileID(file))}\n        failUpload={isFailUpload(getFileID(file))}\n        onRemove={handleRemove}\n        uploadProgress={uploadingFiles[getFileID(file)]}\n      />\n    ));\n    const imageItems =\n      props.images?.map((image, idx) => (\n        <Preview\n          key={`image_${idx}`}\n          // large={!props.multiple}\n          image={image}\n          onRemove={handleRemove}\n        />\n      )) || [];\n\n    const items = fileItems.concat(imageItems);\n\n    return <div className=\"flex flex-col gap-4\">{items}</div>;\n  }, [props.files, props.images, uploadingFiles, uploadedFiles]);\n\n  return (\n    <div className=\"flex flex-col gap-5 w-[25rem]\">\n      {!isLimitReached && props.dragabble && (\n        <DragDrop multiple={props.multiple} onDrop={handleDropFiles} />\n      )}\n      {props.showPreview && previewSection}\n    </div>\n  );\n};\n\nexport default ImagePicker;\n\ndeclare type IUploadHandler = (\n  file: File,\n  fileID: string,\n  options: {\n    setProgress: (progress: number) => void;\n    done: () => void;\n    fail: () => void;\n    cancel: () => void;\n  }\n) => Promise<any> | any;\n\nexport type IImagePickerImage = {\n  id: string | number;\n  path: string;\n  name?: string;\n};\n\nexport interface IImagePickerProps {\n  dragabble?: boolean;\n  uploadOnSelect?: boolean;\n  multiple?: boolean;\n  showPreview?: boolean;\n  uploadAction?: string;\n  limit?: number;\n  uploadAxiosOptions?: AxiosRequestConfig<FormData>;\n  uploadHandler?: IUploadHandler;\n  files: File[];\n  onFilesChange: React.Dispatch<React.SetStateAction<File[]>>;\n  onChange?: (files: File[]) => void;\n  images?: IImagePickerImage[];\n  onRemoveImage?: (props: IImagePickerImage) => void;\n}\n\ndeclare type IImagePicker = FC<IImagePickerProps>;\n","import React from \"react\";\nimport { ChangeEventHandler } from \"react\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport classNames from \"classnames\";\nimport \"./drag-drop.scss\";\nimport { FileSelector } from \"../file-selector\";\nimport { IDragDrop } from \"./types\";\n// import dragDropImage from \"\";\nconst dragDropImage = new URL(\"../../../images/drag-drop.png\", import.meta.url);\n\nexport const DragDrop: IDragDrop = (props) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const removeShield = () => {\n    const shield = ref.current?.getElementsByClassName(\"shield\")[0];\n    if (shield) {\n      shield.classList.remove(\"pointer-events-none\");\n      ref.current.classList.add(\"mouse-over\");\n    }\n  };\n  const addShield = () => {\n    const shield = ref.current?.getElementsByClassName(\"shield\")[0];\n    if (shield) {\n      shield.classList.add(\"pointer-events-none\");\n      ref.current.classList.remove(\"mouse-over\");\n    }\n  };\n\n  const hightlightZone =\n    (highlight = true) =>\n    () => {\n      const className = \"drag-over\";\n      if (highlight) {\n        ref.current?.classList.add(className);\n      } else {\n        ref.current?.classList.remove(className);\n      }\n    };\n  const dragEnterHandler = (event: DragEvent) => {\n    console.log(\"dragEnterHandler\", {\n      event,\n    });\n  };\n  const dragOverHandler = (event: DragEvent) => {\n    // console.log(\"dragOverHandler\", {\n    //   event,\n    // });\n  };\n  const dragLeaveHandler = (event: DragEvent) => {\n    console.log(\"dragLeaveHandler\", {\n      event,\n    });\n  };\n  const dragStartHandler = (event: DragEvent) => {\n    console.log(\"dragStartHandler\", {\n      event,\n    });\n  };\n  const dropHandler = (event: DragEvent) => {\n    const dt = event.dataTransfer;\n    const files = dt?.files;\n    props.onDrop(props.multiple ? files : [files?.[0]]);\n  };\n\n  function handleZoneEvents(\n    action: \"addEventListener\" | \"removeEventListener\"\n  ) {\n    const preventFunc = (handler: Function) => {\n      return (event: any) => {\n        event.preventDefault();\n        event.stopPropagation();\n        handler(event);\n      };\n    };\n    const setEvent = (events: Record<string, Function>) => {\n      Object.entries(events).forEach(([event, handler]) =>\n        ref.current![action](event, preventFunc(handler), false)\n      );\n    };\n    if (ref.current) {\n      setEvent({\n        dragenter: dragEnterHandler,\n        dragover: dragOverHandler,\n        dragleave: dragLeaveHandler,\n        dragstart: dragStartHandler,\n        drop: dropHandler,\n      });\n      setEvent({\n        dragenter: hightlightZone(),\n        dragover: hightlightZone(),\n        dragstart: hightlightZone(),\n        dragleave: hightlightZone(false),\n        drop: hightlightZone(false),\n      });\n      setEvent({\n        mouseover: removeShield,\n        mouseleave: addShield,\n      });\n    }\n  }\n\n  useEffect(() => {\n    handleZoneEvents(\"addEventListener\");\n\n    return () => {\n      handleZoneEvents(\"removeEventListener\");\n    };\n  }, []);\n\n  const handleFiles = (files: FileList) => {\n    props.onDrop(files);\n  };\n\n  return (\n    <div\n      ref={ref}\n      id=\"drag-drop\"\n      className={classNames(\n        \" p-6 border rounded-[1rem] flex items-center justify-center relative overflow-hidden\"\n      )}\n    >\n      <div className=\"shield pointer-events-none\">\n        <FileSelector\n          multiple\n          onChange={handleFiles}\n          className=\"absolute inset-0\"\n        />\n        <div className=\"flex flex-col gap-4 items-center  pointer-events-none\">\n          <img\n            src={dragDropImage.href}\n            className=\"w-[5rem] h-[5rem] opacity-50 z-0\"\n            alt=\"\"\n          />\n          <div className=\"text-[1rem] text-center opacity-50 max-w-[20rem]\">\n            برای انتخاب عکس کلیک کنید یا عکس ها را به اینجا بکشید\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export * from \"./file-selector\";\n","import React, { FC, HTMLProps } from \"react\";\nimport classNames from \"classnames\";\nimport { twMerge } from \"tailwind-merge\";\nimport { IFileSelector } from \"./types\";\n\nexport const FileSelector: IFileSelector = (props) => {\n  const handleFiles = (event: any) => {\n    props.onChange(event.target.files);\n  };\n  return (\n    <div\n      className={twMerge(\n        classNames(\"w-full h-full relative opacity-0\", props.className)\n      )}\n    >\n      <input\n        type=\"file\"\n        multiple\n        accept=\"image/*\"\n        className=\"absolute inset-0\"\n        onChange={handleFiles}\n      />\n    </div>\n  );\n};\n","export * from \"./preview\";\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { IPreview, OnRemoveProps } from \"./types\";\nimport { CarbonCloseOutline } from \"../../../icons/carbon-close-outline\";\nimport classNames from \"classnames\";\nconst loadingImage = new URL(\n  \"../../../images/loading-image.png\",\n  import.meta.url\n);\n\nexport const Preview: IPreview = (props) => {\n  const [imageUrl, setImageUrl] = useState(\n    !props.file ? props.image?.path : loadingImage.href\n  );\n  const isFile = useMemo(() => !!props.file, []);\n  const loadImage = useCallback(async () => {\n    const arrayBuffer = await props.file?.arrayBuffer();\n    if (arrayBuffer) {\n      var arrayBufferView = new Uint8Array(arrayBuffer);\n      var blob = new Blob([arrayBufferView], {\n        type: props.file?.type,\n      });\n      const url = window.URL.createObjectURL(blob);\n      setImageUrl(url);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (props.file) loadImage();\n  }, []);\n\n  const handleRemove = () => {\n    const payload: OnRemoveProps = {\n      isFile,\n    };\n    if (!isFile) payload.image = props.image;\n    else payload.file = props.file;\n    props.onRemove(payload);\n  };\n  const name = useMemo(\n    () => (isFile ? props.file?.name : props.image?.name || \"image\"),\n    []\n  );\n\n  const layout = useMemo(() => {\n    if (props.large) {\n      return <div className=\"w-full\"></div>;\n    } else {\n      return (\n        <>\n          <div className=\"flex items-center w-ful gap-2\">\n            <img\n              className=\"w-[5rem] h-[5rem] !rounded-[.5rem] border p-2 grow-0\"\n              src={imageUrl}\n            />\n            <div className=\"text-[.8rem] grow\">{name}</div>\n\n            <CarbonCloseOutline\n              className=\"shrink-0 cursor-pointer hover:scale-[1.1] transition-transform duration-100   grow-0 text-red-700\"\n              fontSize={24}\n              onClick={handleRemove}\n            />\n          </div>\n        </>\n      );\n    }\n  }, [props.large, imageUrl]);\n\n  return (\n    <div\n      className={classNames(\n        \"flex items-center border rounded-[.5rem] gap-2 p-2 transition-colors duration-[.3s]\",\n        {\n          \"border-red-500 border-[2px] bg-red-500/[.2]\": props.failUpload,\n        }\n      )}\n    >\n      <div className=\"flex flex-col gap-2 w-full\">\n        {layout}\n        {props.isUploading && (\n          <div className=\"w-full flex items-center gap-2 justify-between\">\n            <div\n              className=\"w-full\n             h-[5px] bg-slate-100  rounded-full\"\n            >\n              <div\n                className=\"h-full bg-teal-600  rounded-full\"\n                style={{\n                  width: `${props.uploadProgress || 0}%`,\n                }}\n              />\n            </div>\n            <span className=\"text-[.7rem] grow-0\">{`${Math.floor(\n              props.uploadProgress!\n            )}%`}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport type { SVGProps } from \"react\";\n\nexport function CarbonCloseOutline(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 32 32\"\n      {...props}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M16 2C8.2 2 2 8.2 2 16s6.2 14 14 14s14-6.2 14-14S23.8 2 16 2m0 26C9.4 28 4 22.6 4 16S9.4 4 16 4s12 5.4 12 12s-5.4 12-12 12\"\n      ></path>\n      <path\n        fill=\"currentColor\"\n        d=\"M21.4 23L16 17.6L10.6 23L9 21.4l5.4-5.4L9 10.6L10.6 9l5.4 5.4L21.4 9l1.6 1.6l-5.4 5.4l5.4 5.4z\"\n      ></path>\n    </svg>\n  );\n}\n","export const getFileID = (file: File) => `${file.name}_${file.size}`;\n","import React, { SetStateAction } from \"react\";\nimport { getFileID } from \"../utils\";\nimport { IImagePickerProps } from \"./image-picker\";\nimport Axios, { AxiosInstance, AxiosRequestConfig } from \"axios\";\n\nexport interface UploaderProps\n  extends Pick<\n    IImagePickerProps,\n    \"uploadAction\" | \"uploadHandler\" | \"uploadOnSelect\" | \"uploadAxiosOptions\"\n  > {\n  setUploadedFiles: React.Dispatch<React.SetStateAction<File[]>>;\n  setUploadingFiles: React.Dispatch<\n    React.SetStateAction<Record<string, number>>\n  >;\n  isUploading: (fileID: string) => boolean;\n}\nconst abortControllers: Record<string, AbortController> = {};\n\nexport const cancelUpload = (id: string) => {\n  const controller = abortControllers[id];\n  if (controller) {\n    controller.abort();\n    delete abortControllers[id];\n  }\n};\nexport const Uploader = (props: UploaderProps) => {\n  const setUploadingItemData = (id: string, data: number) => {\n    props.setUploadingFiles((uploading) => ({\n      ...Object.fromEntries(\n        Object.entries(uploading).map(([fileID, prg]) =>\n          id == fileID ? [fileID, data] : [fileID, prg]\n        )\n      ),\n    }));\n  };\n  const setUploadProgress = (id: string, progress: number) => {\n    setUploadingItemData(id, progress);\n  };\n  const setUploadFail = (id: string) => {\n    setUploadingItemData(id, -1);\n  };\n  const setUploadDone = (id: string, files: File[]) => {\n    setUploadingItemData(id, 100);\n    props.setUploadedFiles((uploaded) => [\n      ...uploaded,\n      files.find((file) => getFileID(file) == id)!,\n    ]);\n  };\n\n  return {\n    async upload<T = unknown>(files: File[]) {\n      if (!props.uploadOnSelect) return;\n      if (!props.uploadHandler && !props.uploadAction) {\n        throw Error(\"You didn't provide any upload action to upload files\");\n      }\n\n      let axios: AxiosInstance;\n      if (!props.uploadHandler)\n        axios = Axios.create({\n          baseURL: props.uploadAction,\n        });\n      props.setUploadingFiles((uploadingFiles) => ({\n        ...uploadingFiles,\n        ...Object.fromEntries(files.map((file) => [getFileID(file), 0])),\n      }));\n      const promises = [];\n      for (const file of files) {\n        const fileID = getFileID(file);\n        if (props.uploadHandler) {\n          // upload by custom handler\n          promises.push(\n            props.uploadHandler!(file, getFileID(file), {\n              done: setUploadDone.bind(this, fileID, files),\n              fail: setUploadFail.bind(this, fileID),\n              setProgress: setUploadProgress.bind(this, fileID),\n              cancel: cancelUpload.bind(this, fileID),\n            })\n          );\n        } else {\n          // upload by default handler\n          const form = new FormData();\n          const abortController = new AbortController();\n          form.append(\"file\", file);\n          let uploadOptions: AxiosRequestConfig<FormData> = {\n            onUploadProgress: (progEvent) => {\n              setUploadProgress(\n                fileID,\n                (progEvent.loaded * 100) / progEvent.total!\n              );\n            },\n            signal: abortController.signal,\n          };\n          if (props.uploadAxiosOptions) {\n            uploadOptions = Object.assign(\n              {},\n              uploadOptions,\n              props.uploadAxiosOptions\n            );\n          }\n          promises.push(\n            axios!\n              .post(\"/\", form, uploadOptions)\n              .then((data) => {\n                setUploadDone(fileID, files);\n                return data;\n              })\n              .catch((err) => {\n                setUploadFail(fileID);\n                return Promise.reject(err);\n              })\n          );\n          abortControllers[fileID] = abortController;\n        }\n      }\n      try {\n        const result: T[] = await Promise.all(promises);\n        return result;\n      } catch (error) {\n        console.error(\"Upload failed!\");\n      }\n    },\n  };\n};\n"],"names":[],"version":3,"file":"module.js.map","sourceRoot":"../"}